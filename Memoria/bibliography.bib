# https://en.wikibooks.org/wiki/LaTeX/Bibliography_Management#BibTeX
@mastersthesis{Yan77,
  author = {Yoo Baik Yang},
  title  = {Methods and Techniques used for Job Shop Scheduling},
  year   = {1977},
  school = {College of Engineering of Florida Technological University},
  url    = {https://stars.library.ucf.edu/cgi/viewcontent.cgi?article=1389&context=rtd},
  type   = {Masters Thesis},
  note   = {Methods and Techniques, Analytical Techniques}
}

@article{KTM99,
  author = {Käschel, Joachim and Teich, Tobias and Meier, B.},
  year   = {1999},
  month  = {01},
  pages  = {},
  title  = {Algorithms for the Job Shop Scheduling Problem - a comparison of different methods},
  url    = {https://www.researchgate.net/publication/240744093_Algorithms_for_the_Job_Shop_Scheduling_Problem_-_a_comparison_of_different_methods}
}

@article{MSV13,
  author  = {Carlos Mencia and Maria R. Sierra and Ramiro Varela},
  title   = {Depth-first heuristic search for the job shop scheduling problem},
  journal = {Annals of Operations Research},
  year    = {2013},
  month   = {07},
  url     = {https://link.springer.com/article/10.1007/s10479-012-1296-x#citeas}
}

@article{Kon14,
  author  = {Sai Varsha Konakalla},
  title   = {A Star Algorithm},
  journal = {Indiana State University},
  year    = {2014},
  month   = {12},
  url     = {http://cs.indstate.edu/~skonakalla/paper.pdf},
  pages   = {4}
}

@article{HNR68,
  author  = {Peter E. Hart and Nils J. Nilsson and Bertram Raphael},
  title   = {A Formal Basis for the Heuristic Determination of Minimum Cost Paths},
  journal = {IEEE Transactions on Systems Science and Cybernetics},
  year    = {1968},
  month   = {07},
  url     = {https://ieeexplore.ieee.org/abstract/document/4082128/authors#authors},
  pages   = {100 - 107}
}

@article{ZJW20,
  author    = {Zhou, Yuzhi and Jin, Xi and Wang, Tianqi},
  title     = {FPGA Implementation of A* Algorithm for Real-Time Path Planning},
  journal   = {International Journal of Reconfigurable Computing},
  year      = {2020},
  month     = {Aug},
  publisher = {Hindawi},
  abstract  = {The traditional A* accelerator. Experiments show that the hardware accelerator achieves 37--75 times performance enhancement relative to software implementation. It is suitable for real-time path-planning applications.},
  doi       = {10.1155/2020/8896386},
  url       = {https://doi.org/10.1155/2020/8896386}
}

@article{Nil69,
  author    = {Nils J. Nilsson},
  title     = {Problem solving methods in Artificial Intelligence},
  journal   = {Stanford Research Institute},
  year      = {1969},
  month     = {Nov},
  publisher = {Stanford Research Institute},
  url       = {https://stacks.stanford.edu/file/druid:xw061vq8842/xw061vq8842.pdf}
}

@article{BC22,
  author    = {Cristina Ruiz de Bucesta Crespo},
  title     = {Resolución del Job Shop Scheduling Problema mediante reglas de prioridad},
  journal   = {Universidad de Oviedo},
  year      = {2022},
  month     = {Feb},
  publisher = {Universidad de Oviedo},
  url       = {https://digibuo.uniovi.es/dspace/bitstream/handle/10651/62015/TFG_CristinaRuizdeBucestaCrespo.pdf?sequence=10}
}

@article{Man67,
  author     = {Manacher, G. K.},
  title      = {Production and Stabilization of Real-Time Task Schedules},
  year       = {1967},
  issue_date = {July 1967},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {14},
  number     = {3},
  issn       = {0004-5411},
  url        = {https://doi.org/10.1145/321406.321408},
  doi        = {10.1145/321406.321408},
  abstract   = {A model for multiprocessor control is considered in which jobs are broken into various pieces, called tasks. Tasks are executed by single processing units. In this paper the structure controlling the assignment of tasks to processors is the task list, which orders all tasks according to servicing priority. When a processors becomes free, it simply picks up the highest priority task that is executable at that moment.The job and its component tasks are imagined to be interacting with an environment consisting of a set of rigid timing constraints. Such constraints are of two types, called start-times and deadlines. The interaction is specified by requiring that certain distinguished tasks conform directly to one or more of these constraints. Tasks conforming to a start-time cannot begin until the start-time has passed, and tasks conforming to a deadline cannot proceed beyond the deadline. In our model, all tasks have known maximum run-times, but in any particular job execution, task run-times are unknown.It is shown that despite the simplicity of this control scheme some peculiar phenomena result. Most of these phenomena were first noticed by P. Richards in 1960. A simulation study (Appendix I) reveals that they may be very common in practice. In the present paper and a companion paper by R. L. Graham [Bell Syst. Tech. J. 45 (1966), 1563-1581] a coherent theory of task-list control is developed, in which the nature of these peculiarities is brought under systematic study. A number of potentially useful results are derived.},
  journal    = {J. ACM},
  month      = {jul},
  pages      = {439–465},
  numpages   = {27}
}

@article{Nil84,
  author  = {Nils J. Nilsson},
  journal = {SRI International},
  title   = {Shakey the Robot},
  year    = {1984},
  month   = {Apr},
  url     = {http://ai.stanford.edu/~nilsson/OnlinePubs-Nils/shakey-the-robot.pdf}
}

@article{Zag17,
  title   = {Parallelizing A* Path Finding Algorithm},
  author  = {Soha S. Zaghloul and Hadeel Al-Jami and Maha Bakalla and Latifa Al-Jebreen and Mariam Arshad and Arwa Al-Issa},
  journal = {International Journal Of Engineering And Computer Science},
  year    = {2017},
  month   = {09},
  pages   = {22469–22476},
  doi     = {0.18535/ijecs/v6i9.13},
  issn    = {2319-7242},
  url     = {https://www.ijecs.in/index.php/ijecs/article/download/2774/2563/}
}

@inproceedings{WH16,
  title  = {Parallel A* Graph Search},
  author = {Ariana Weinstock and Rachel Holladay},
  year   = {2016},
  url    = {https://api.semanticscholar.org/CorpusID:218446573}
}

@article{KFB09,
  title        = {Scalable, Parallel Best-First Search for Optimal Sequential Planning},
  volume       = {19},
  url          = {https://ojs.aaai.org/index.php/ICAPS/article/view/13350},
  doi          = {10.1609/icaps.v19i1.13350},
  abstractnote = { &lt;p&gt; Large-scale, parallel clusters composed of commodity processors are increasingly available, enabling the use of vast processing capabilities and distributed RAM to solve hard search problems.  We investigate parallel algorithms for optimal sequential planning, with an emphasis on exploiting distributed memory computing clusters.  In particular, we focus on an approach which distributes and schedules work among processors based on a hash function of the search state.  We use this approach to parallelize the A* algorithm in the optimal sequential version of the Fast Downward planner.  The scaling behavior of the algorithm is evaluated experimentally on clusters using up to 128 processors, a significant increase compared to previous work in parallelizing planners.  We show that this approach scales well, allowing us to effectively utilize the large amount of distributed memory to optimally solve problems which require hundreds of gigabytes of RAM to solve. We also show that this approach scales  well for a single, shared-memory multicore machine. &lt;/p&gt; },
  number       = {1},
  journal      = {Proceedings of the International Conference on Automated Planning and Scheduling},
  author       = {Kishimoto, Akihiro and Fukunaga, Alex and Botea, Adi},
  year         = {2009},
  month        = {Oct.},
  pages        = {201-208}
}